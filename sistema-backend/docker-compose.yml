    services:
        frontend:
            container_name: frontend
            build:
                context: ../sistema-frontend
                dockerfile: Dockerfile
            ports:
                -   "4200:4200"
            volumes:
                - ../sistema-frontend:/app
                - /app/node_modules
    #        command: ["ng", "serve", "--host", "0.0.0.0"]
            extra_hosts:
                - host.docker.internal:host-gateway
                - "backend:host-gateway"
            depends_on:
                -   keycloak
                -   backend
            networks:
                - services-network

        backend:
            container_name: backend
            image: quarkus-quickstarts/quartz:latest
            build:
                context: ./
                dockerfile: ${BUILD_DOCKERFILE:-Dockerfile}
#                dockerfile: src/main/docker/Dockerfile.jvm
            ports:
                -   "8081:8081"
            environment:
                QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres/sistema
            networks:
                - services-network
            depends_on:
                - postgres


        keycloak:
            container_name: keycloak
            volumes:
                - ./imports/realm-export.json:/opt/keycloak/data/import/realm-export.json
                - ./imports/unifor:/opt/keycloak/themes/unifor
            command: start-dev --import-realm
            image: quay.io/keycloak/keycloak:26.1.0
            environment:
                KC_DB: postgres
                KC_DB_URL_HOST: postgres
                KC_DB_URL_DATABASE: sistema
                KC_DB_PASSWORD: postgres
                KC_DB_USERNAME: postgres
                KC_DB_SCHEMA: public
                KEYCLOAK_ADMIN: admin
                KEYCLOAK_ADMIN_PASSWORD: admin
                KC_SPI_THEME_WELCOME_THEME: unifor

            ports:
                - 8080:8080
            depends_on:
                postgres:
                    condition: service_healthy
            networks:
                - services-network

        postgres:
            image: postgres
            container_name: postgres
            volumes:
                -   pgdata:/var/lib/postgresql/data
                - ./src/main/resources/import.sql:/docker-entrypoint-initdb.d/import.sql
            environment:
                POSTGRES_USER: postgres
                POSTGRES_PASSWORD: postgres
                POSTGRES_DB: sistema
            ports:
                - "5433:5432"
            healthcheck:
                test: [ "CMD-SHELL", "pg_isready -U postgres" ]
                interval: 5s
                timeout: 5s
                retries: 5
            networks:
                - services-network

    volumes:
        pgdata:
    networks:
        services-network:
            driver: bridge
        keycloak-network:
            driver: bridge
        backend-network:
            driver: bridge